# Generated by Django 2.0 on 2017-12-08 16:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revive_ability', models.BooleanField(default=False)),
                ('damaging_ability', models.BooleanField(default=True)),
                ('headshot_capable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Death',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('wl_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_number', models.IntegerField()),
                ('left_points', models.IntegerField()),
                ('left_subpoints', models.FloatField()),
                ('right_points', models.IntegerField()),
                ('right_subpoints', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('hero_type', models.CharField(choices=[('O', 'Offense'), ('D', 'Defense'), ('T', 'Tank'), ('S', 'Support')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Kill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Ability')),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('is_koth', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wl_id', models.IntegerField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Event')),
            ],
        ),
        migrations.CreateModel(
            name='NPC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spawning_hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Hero')),
            ],
        ),
        migrations.CreateModel(
            name='NPCDeath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('side', models.CharField(choices=[('L', 'Left'), ('R', 'Right'), ('N', 'Neither')], default='N', max_length=1)),
                ('npc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.NPC')),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(choices=[('B', 'Blue'), ('R', 'Red'), ('W', 'White'), ('G', 'Green'), ('O', 'Orange'), ('Y', 'Yellow'), ('P', 'Purple'), ('L', 'Black')], default='B', max_length=1)),
                ('side', models.CharField(choices=[('L', 'Left'), ('R', 'Right'), ('N', 'Neither')], default='N', max_length=1)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Pause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('wl_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PointFlip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('controlling_side', models.CharField(choices=[('L', 'Left'), ('R', 'Right'), ('N', 'Neither')], default='N', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='PointGain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('point_total', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Revive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Ability')),
                ('revived_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revived_player', to='annotator.Player')),
                ('reviving_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviving_player', to='annotator.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField()),
                ('attacking_side', models.CharField(choices=[('L', 'Left'), ('R', 'Right'), ('N', 'Neither')], default='N', max_length=1)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('new_hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Hero')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('wl_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UltGain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round')),
            ],
        ),
        migrations.CreateModel(
            name='UltUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round')),
            ],
        ),
        migrations.CreateModel(
            name='Unpause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.IntegerField()),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round')),
            ],
        ),
        migrations.AddField(
            model_name='revive',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round'),
        ),
        migrations.AddField(
            model_name='pointgain',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round'),
        ),
        migrations.AddField(
            model_name='pointflip',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round'),
        ),
        migrations.AddField(
            model_name='pause',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round'),
        ),
        migrations.AddField(
            model_name='participation',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Team'),
        ),
        migrations.AddField(
            model_name='npcdeath',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round'),
        ),
        migrations.AddField(
            model_name='kill',
            name='killed_player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='killed_player', to='annotator.Player'),
        ),
        migrations.AddField(
            model_name='kill',
            name='killing_player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='killing_player', to='annotator.Player'),
        ),
        migrations.AddField(
            model_name='kill',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round'),
        ),
        migrations.AddField(
            model_name='game',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Map'),
        ),
        migrations.AddField(
            model_name='game',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Match'),
        ),
        migrations.AddField(
            model_name='game',
            name='teams',
            field=models.ManyToManyField(through='annotator.Participation', to='annotator.Team'),
        ),
        migrations.AddField(
            model_name='death',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Player'),
        ),
        migrations.AddField(
            model_name='death',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Round'),
        ),
        migrations.AddField(
            model_name='ability',
            name='hero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Hero'),
        ),
    ]
