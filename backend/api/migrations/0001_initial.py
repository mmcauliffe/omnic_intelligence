# Generated by Django 2.0 on 2018-10-10 08:02

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('revive_ability', models.BooleanField(default=False)),
                ('damaging_ability', models.BooleanField(default=True)),
                ('headshot_capable', models.BooleanField(default=False)),
                ('ultimate_ability', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'abilities',
                'ordering': ['hero', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Death',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
            ],
            options={
                'ordering': ['round', 'time_point', 'player'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('liquipedia_id', models.CharField(blank=True, max_length=128, null=True)),
                ('spectator_mode', models.CharField(choices=[('C', 'Color'), ('W', 'World Cup'), ('L', 'Overwatch League'), ('A', 'Ability'), ('N', 'Contenders'), ('H', 'China Contenders'), ('K', 'Korea Contenders'), ('O', 'Original')], default='C', max_length=1)),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_number', models.IntegerField()),
            ],
            options={
                'ordering': ['game_number'],
            },
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('hero_type', models.CharField(choices=[('O', 'Offense'), ('D', 'Defense'), ('T', 'Tank'), ('S', 'Support')], max_length=1)),
            ],
            options={
                'verbose_name_plural': 'heroes',
            },
        ),
        migrations.CreateModel(
            name='Kill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('headshot', models.BooleanField(default=False)),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Ability')),
            ],
            options={
                'ordering': ['round', 'time_point', 'killing_player', 'killed_player'],
            },
        ),
        migrations.CreateModel(
            name='KillNPC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Ability')),
            ],
            options={
                'ordering': ['round', 'time_point', 'killing_player', 'killed_npc'],
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('mode', models.CharField(choices=[('A', 'Assault'), ('E', 'Escort'), ('C', 'Control'), ('H', 'Hybrid')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=256)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Event')),
            ],
            options={
                'verbose_name_plural': 'matches',
                'ordering': [],
            },
        ),
        migrations.CreateModel(
            name='NPC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('spawning_hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Hero')),
            ],
            options={
                'verbose_name': 'NPC',
                'verbose_name_plural': 'NPCs',
            },
        ),
        migrations.CreateModel(
            name='NPCDeath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('side', models.CharField(choices=[('L', 'Left'), ('R', 'Right'), ('N', 'Neither')], default='N', max_length=1)),
                ('npc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.NPC')),
            ],
            options={
                'ordering': ['round', 'time_point', 'side', 'npc'],
            },
        ),
        migrations.CreateModel(
            name='Overtime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DecimalField(decimal_places=1, default=Decimal('0.0'), max_digits=6)),
                ('end_time', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
            ],
            options={
                'ordering': ['round', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Pause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DecimalField(decimal_places=1, default=Decimal('0.0'), max_digits=6)),
                ('end_time', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
            ],
            options={
                'ordering': ['round', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('liquipedia_id', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PlayerName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerNameUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Event')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PlayerName')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_index', models.IntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player')),
            ],
            options={
                'ordering': ['player_index'],
            },
        ),
        migrations.CreateModel(
            name='PointFlip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('controlling_side', models.CharField(choices=[('L', 'Left'), ('R', 'Right'), ('N', 'Neither')], default='N', max_length=1)),
            ],
            options={
                'ordering': ['round', 'time_point'],
            },
        ),
        migrations.CreateModel(
            name='PointGain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('point_total', models.IntegerField()),
            ],
            options={
                'ordering': ['round', 'time_point'],
            },
        ),
        migrations.CreateModel(
            name='Replay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DecimalField(decimal_places=1, default=Decimal('0.0'), max_digits=6)),
                ('end_time', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
            ],
            options={
                'ordering': ['round', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Revive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Ability')),
                ('revived_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revived_player', to='api.Player')),
                ('reviving_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviving_player', to='api.Player')),
            ],
            options={
                'ordering': ['round', 'time_point', 'reviving_player', 'revived_player'],
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField()),
                ('attacking_side', models.CharField(choices=[('L', 'Left'), ('R', 'Right'), ('N', 'Neither')], default='N', max_length=1)),
                ('begin', models.DecimalField(decimal_places=1, default=Decimal('0.0'), max_digits=6)),
                ('end', models.DecimalField(decimal_places=1, default=Decimal('0.0'), max_digits=6)),
                ('annotation_status', models.CharField(choices=[('N', 'None'), ('W', "Winston's lab"), ('M', 'Manual'), ('O', 'Omnic intelligence')], default='N', max_length=1)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
            options={
                'ordering': ['round_number'],
            },
        ),
        migrations.CreateModel(
            name='SmallerWindow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DecimalField(decimal_places=1, default=Decimal('0.0'), max_digits=6)),
                ('end_time', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
            ],
            options={
                'ordering': ['round', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='StreamChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('site', models.CharField(choices=[('T', 'Twitch'), ('Y', 'YouTube')], default='T', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='StreamVod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=256, unique=True)),
                ('title', models.CharField(max_length=256)),
                ('broadcast_date', models.DateTimeField(blank=True, null=True)),
                ('film_format', models.CharField(choices=[('O', 'Original'), ('W', 'World Cup 2017'), ('A', 'APEX'), ('K', 'Korean Contenders'), ('2', 'Overwatch league stage 2')], default='O', max_length=1)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.StreamChannel')),
            ],
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('end_time_point', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('new_hero', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Hero')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
            ],
            options={
                'ordering': ['round', 'time_point', 'player'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('players', models.ManyToManyField(through='api.Affiliation', to='api.Player')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TeamParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(choices=[('B', 'Blue'), ('R', 'Red'), ('W', 'White'), ('G', 'Green'), ('O', 'Orange'), ('Y', 'Yellow'), ('P', 'Purple'), ('K', 'Black')], default='B', max_length=1)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('subpoints', models.CharField(blank=True, max_length=128, null=True)),
                ('players', models.ManyToManyField(through='api.PlayerParticipation', to='api.Player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Team')),
            ],
            options={
                'ordering': ['points', 'subpoints'],
            },
        ),
        migrations.CreateModel(
            name='UltGain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
            ],
            options={
                'ordering': ['round', 'time_point', 'player'],
            },
        ),
        migrations.CreateModel(
            name='UltUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_point', models.DecimalField(decimal_places=1, max_digits=6)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
            ],
            options={
                'ordering': ['round', 'time_point', 'player'],
            },
        ),
        migrations.AddField(
            model_name='round',
            name='stream_vod',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.StreamVod'),
        ),
        migrations.AddField(
            model_name='revive',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='replay',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='pointgain',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='pointflip',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='playerparticipation',
            name='team_participation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.TeamParticipation'),
        ),
        migrations.AddField(
            model_name='pause',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='overtime',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='npcdeath',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='match',
            name='teams',
            field=models.ManyToManyField(to='api.Team'),
        ),
        migrations.AddField(
            model_name='killnpc',
            name='assisting_players',
            field=models.ManyToManyField(related_name='assisted_npc_kills', to='api.Player'),
        ),
        migrations.AddField(
            model_name='killnpc',
            name='killed_npc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='killeds', to='api.NPC'),
        ),
        migrations.AddField(
            model_name='killnpc',
            name='killing_player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='npc_kills', to='api.Player'),
        ),
        migrations.AddField(
            model_name='killnpc',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='kill',
            name='assisting_players',
            field=models.ManyToManyField(related_name='assisted_kills', to='api.Player'),
        ),
        migrations.AddField(
            model_name='kill',
            name='killed_player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='killeds', to='api.Player'),
        ),
        migrations.AddField(
            model_name='kill',
            name='killing_player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kills', to='api.Player'),
        ),
        migrations.AddField(
            model_name='kill',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='game',
            name='left_team',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='left_team', to='api.TeamParticipation'),
        ),
        migrations.AddField(
            model_name='game',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Map'),
        ),
        migrations.AddField(
            model_name='game',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Match'),
        ),
        migrations.AddField(
            model_name='game',
            name='right_team',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='right_team', to='api.TeamParticipation'),
        ),
        migrations.AddField(
            model_name='event',
            name='channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.StreamChannel'),
        ),
        migrations.AddField(
            model_name='death',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player'),
        ),
        migrations.AddField(
            model_name='death',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Team'),
        ),
        migrations.AddField(
            model_name='ability',
            name='hero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Hero'),
        ),
        migrations.AlterUniqueTogether(
            name='ultuse',
            unique_together={('round', 'time_point', 'player')},
        ),
        migrations.AlterUniqueTogether(
            name='ultgain',
            unique_together={('round', 'time_point', 'player')},
        ),
        migrations.AlterUniqueTogether(
            name='switch',
            unique_together={('round', 'time_point', 'player', 'new_hero')},
        ),
        migrations.AlterUniqueTogether(
            name='smallerwindow',
            unique_together={('round', 'start_time')},
        ),
        migrations.AlterUniqueTogether(
            name='round',
            unique_together={('game', 'round_number')},
        ),
        migrations.AlterUniqueTogether(
            name='revive',
            unique_together={('round', 'time_point', 'reviving_player', 'revived_player')},
        ),
        migrations.AlterUniqueTogether(
            name='replay',
            unique_together={('round', 'start_time')},
        ),
        migrations.AlterUniqueTogether(
            name='pointgain',
            unique_together={('round', 'time_point')},
        ),
        migrations.AlterUniqueTogether(
            name='pointflip',
            unique_together={('round', 'time_point')},
        ),
        migrations.AlterUniqueTogether(
            name='playerparticipation',
            unique_together={('team_participation', 'player_index')},
        ),
        migrations.AlterUniqueTogether(
            name='pause',
            unique_together={('round', 'start_time')},
        ),
        migrations.AlterUniqueTogether(
            name='overtime',
            unique_together={('round', 'start_time')},
        ),
        migrations.AlterUniqueTogether(
            name='npcdeath',
            unique_together={('round', 'time_point', 'npc', 'side')},
        ),
        migrations.AlterUniqueTogether(
            name='killnpc',
            unique_together={('round', 'time_point', 'killing_player', 'killed_npc')},
        ),
        migrations.AlterUniqueTogether(
            name='kill',
            unique_together={('round', 'time_point', 'killing_player', 'killed_player')},
        ),
        migrations.AlterUniqueTogether(
            name='game',
            unique_together={('match', 'game_number')},
        ),
        migrations.AlterUniqueTogether(
            name='death',
            unique_together={('round', 'time_point', 'player')},
        ),
    ]
